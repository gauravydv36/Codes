#include <bits/stdc++.h> 
void dfs(int node,vector<int> &vis,stack<int> &st, vector<vector<int>> &adj){
    vis[node]=1;
    for(int i=0;i<adj[node].size();i++){
        if(vis[adj[node][i]]==0){
            dfs(adj[node][i],vis,st,adj);
        }
    }
    st.push(node);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    // Write your code here
    vector<vector<int>> adj(v);
    for(int i=0;i<e;i++){
        adj[edges[i][0]].push_back(edges[i][1]);
    }
    vector<int> vis(v,0);
    stack<int> st;
    for(int i=0;i<v;i++){
        if(vis[i]==0){
            dfs(i,vis,st,adj);
        }
    }
    vector<int> ans;
    while(st.size()!=0){
        int a=st.top();
        ans.push_back(a);
        st.pop();
    }
    return ans;
}
